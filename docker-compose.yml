version: '3.8'
services:
  rabbitmq:
    build: ./apps/rabbitmq
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-vols/ritta/rabbitmq/data:/var/lib/rabbitmq/
      - ~/.docker-vols/ritta/rabbitmq/log:/var/log/rabbitmq/
    networks:
      - ritta
    healthcheck:
      test: ["CMD", "/usr/bin/curl", "-f", "https://webhook.site/eb1e061b-06b8-46c1-8e73-65bd64c1db46"]
      interval: 5s
      timeout: 10s
      retries: 12

  gateway:
    build: ./apps/gateway
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=guest
      - RMQ_PASSWORD=guest
    ports:
      - '3000:3000'
    networks:
      - ritta

  # auth:
  #   build: ./apps/auth
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     users:
  #       condition: service_healthy
  #   environment:
  #     - NODE_ENV=production
  #     - RMQ_HOST=rabbitmq
  #     - RMQ_PORT=5672
  #     - RMQ_USERNAME=guest
  #     - RMQ_PASSWORD=guest
  #   ports:
  #     - '3001:3001'
  #   networks:
  #     - ritta

  users:
    build: ./apps/users
    depends_on:
      rabbitmq:
        condition: service_healthy
      users_db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=guest
      - RMQ_PASSWORD=guest
      - MONGO_URI=mongodb://password:ritta@mongo:27000/ritta
    ports:
      - '3002:3002'
    networks:
      - ritta

  users_db:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ritta
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ~/.docker-vols/ritta/users_db:/data/db
    networks:
      - ritta
    ports:
      - '4001:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh
      interval: 5s
      timeout: 10s
      retries: 12

networks:
  ritta:
    driver: bridge

version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3.9.7-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692
    volumes:
      - ~/.docker-vols/ritta/rabbitmq/data:/var/lib/rabbitmq/
      - ~/.docker-vols/ritta/rabbitmq/log:/var/log/rabbitmq/
    networks:
      - ritta
      - loki
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 12

  gateway:
    build:
      context: apps/gateway
    command: yarn start:dev
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=3000
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=guest
      - RMQ_PASSWORD=guest
    ports:
      - '3000:3000'
    networks:
      - ritta
    volumes:
      - ./logs/gateway.log:/home/app/logs/all.log
      - ./apps/gateway:/home/app
      - ./apps/gateway/dist:/home/app/dist
      - ./apps/gateway/node_modules:/home/app/node_modules

  auth:
    build:
      context: apps/auth
    command: yarn start:dev
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=auth
      - RMQ_PASSWORD=auth
      - SIGNING_KEY=RITTATESTSIGNINGKEY
    networks:
      - ritta
    volumes:
      - ./apps/auth:/home/app
      - ./apps/auth/dist:/home/app/dist
      - ./apps/auth/node_modules:/home/app/node_modules

  users:
    build:
      context: apps/users
    command: yarn start:dev
    depends_on:
      rabbitmq:
        condition: service_healthy
      users_db:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=guest
      - RMQ_PASSWORD=guest
      - MONGO_URI=mongodb://ritta:password@users_db:27017/ritta?authSource=admin
    networks:
      - ritta
    volumes:
      - ./apps/users:/home/app
      - ./apps/users/dist:/home/app/dist
      - ./apps/users/node_modules:/home/app/node_modules

  users_db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=ritta
      - MONGO_INITDB_ROOT_USERNAME=ritta
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ~/.docker-vols/ritta/users_db:/data/db
    networks:
      - ritta
    healthcheck:
      test: mongosh --quiet --eval "db.runCommand('ping').ok"
      interval: 5s
      timeout: 10s
      retries: 12
  loki:
    image: grafana/loki:2.4.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.4.0
    volumes:
      - ./logs/:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - loki
  # prometheus:
  #   # https://hub.docker.com/r/prom/prometheus/tags
  #   image: prom/prometheus:v2.28.1
  #   networks:
  #     - loki
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - rabbitpr:/prometheus
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
networks:
  ritta:
    driver: bridge
  loki: null

volumes:
  rabbitpr: null
